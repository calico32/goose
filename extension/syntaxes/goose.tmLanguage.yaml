name: Goose
scopeName: source.goose
patterns:
  - include: '#comments'
  - include: '#functions'
  - include: '#function-call'
  - include: '#keywords'
  - include: '#numbers'
  - include: '#operators'
  - include: '#language-constants'
  - include: '#strings'

repository:
  source:
    patterns:
      - include: '#comments'
      - include: '#functions'
      - include: '#function-call'
      - include: '#keywords'
      - include: '#numbers'
      - include: '#operators'
      - include: '#language-constants'
      - include: '#strings'
  comments:
    patterns:
      - name: comment.block.goose
        begin: '\/\*'
        end: '\*\/'
      - name: comment.line.double-slash.goose
        begin: \/\/
        end: $
  keywords:
    patterns:
      - name: keyword.control.goose
        match: \b(let|const|fn|elseif|if|in|else|repeat|forever|break|continue|memo|times|while|for|return|end)\b
  operators:
    patterns:
      - name: keyword.operator.goose
        match: '(&&|\|\||\+|-|\*|%|\*\*|\/|=|==|>|<|>=|<=|!=)'
  functions:
    begin: '\b(fn)\s*([A-Za-z$_][A-Za-z0-9$_]*)\s*(\()'
    beginCaptures:
      '1':
        name: keyword.control.goose
      '2':
        name: entity.name.function.goose
      '3':
        name: punctuation.definition.parameters.goose
    end: (\))
    endCaptures:
      '1':
        name: punctuation.definition.parameters.goose
    patterns:
      - include: '#function-params'
  function-params:
    patterns:
      - begin: '(?=[A-Za-z$_])|(\.\.\.)'
        beginCaptures:
          '1':
            name: keyword.operator.rest-parameters.goose
        comment: 'Matches valid argument, function and variable names.  To be thorough: https://github.com/mathiasbynens/mothereff.in/tree/master/js-variables'
        end: '(?=[,)/])'
        patterns:
          - name: variable.parameter.function.goose
            match: '\G[A-Za-z$_][A-Za-z0-9$_]*'
          - include: '#function-call'
          - include: '#comments'
          - include: '#operators'
          - include: '#numbers'
          - include: '#comments'
  function-call:
    begin: '(?<!\w)([A-Za-z$_][A-Za-z0-9$_]*)(\()'
    beginCaptures:
      '1':
        name: entity.name.function.goose
      '2':
        name: meta.brace.round.goose
    end: \)
    endCaptures:
      '0':
        name: meta.brace.round.goose
    patterns:
      - include: $self
  numbers:
    patterns:
      - name: constant.numeric.hex.goose
        match: '(?<!\w|\$)0[xX]\h+\b'
      - name: constant.numeric.binary.goose
        match: '(?<!\w|\$)0[bB][01]+\b'
      - name: constant.numeric.octal.goose
        match: '(?<!\w|\$)0[oO][0-7]+\b'
      - name: constant.numeric.goose
        match: '(?x)(?<!\w|\$)[+-]?(?>((0|[1-9][0-9]*)(\.[0-9]*)?|\.[0-9]+)([eE][+-]?[0-9]+)?)(?!\w)'
  language-constants:
    patterns:
      - name: constant.language.goose
        match: \b(true|false|null|_)\b
  string-interpolations:
    patterns:
      - name: string.interpolated.goose
        match: (\$)([A-Za-z$_][A-Za-z0-9$_]*)
        captures:
          0:
            name: variable.parameter.goose
      - name: source.goose
        contentName: variable.parameter.goose
        begin: \$\{
        beginCaptures:
          0:
            name: variable.parameter.goose
        end: (\})
        endCaptures:
          0:
            name: variable.parameter.goose
          1:
            name: source.goose
        patterns:
          - include: '#source'
          - begin: \(
            beginCaptures:
              0:
                name: meta.brace.round.goose
            end: \)
            endCaptures:
              0:
                name: meta.brace.round.goose
            patterns:
              - include: '#source'
          - begin: \{
            beginCaptures:
              0:
                name: meta.brace.curly.goose
            end: \}
            endCaptures:
              0:
                name: meta.brace.curly.goose
            patterns:
              - include: $self
          - match: '[A-Za-z$_][A-Za-z0-9$_]*'
            name: variable.parameter.goose

  string-escapes:
    patterns:
      - name: constant.character.escape.goose
        match: '\\[^oxuU]'
      - name: constant.character.escape.goose
        match: '\\o[0-7]{3}'
      - name: constant.character.escape.goose
        match: '\\x[0-9A-Fa-f]{2}'
      - name: constant.character.escape.goose
        match: '\\u[0-9A-Fa-f]{4}'
      - name: constant.character.escape.goose
        match: '\\U[0-9A-Fa-f]{8}'
  strings:
    name: string.quoted.double.goose
    begin: '"'
    beginCaptures:
      0:
        name: punctuation.definition.string.begin.goose
    end: '"'
    endCaptures:
      0:
        name: punctuation.definition.string.end.goose
    patterns:
      - include: '#string-interpolations'
      - include: '#string-escapes'
